server {
    listen 80; # Nginx escuta na porta 80 dentro do container Docker

    # Bloco para servir o Frontend (Single Page Application - SPA)
    location / {
        root   /usr/share/nginx/html; # Diretório onde os arquivos estáticos do frontend estão localizados
        index  index.html index.htm; # Arquivos de índice padrão
        # Esta diretiva é crucial para SPAs. Ela tenta servir o arquivo solicitado ($uri),
        # depois o diretório ($uri/), e se não encontrar, redireciona para index.html.
        # Isso permite que o roteamento do lado do cliente (ex: React Router) funcione.
        try_files $uri $uri/ /index.html;
    }

    # Bloco para atuar como Proxy Reverso para o Backend
    # Qualquer requisição que comece com '/api/' será encaminhada para o serviço backend.
    location /api/ {
        # Encaminha a requisição para o serviço 'backend' na porta 8000.
        # 'backend' é o nome do serviço definido no docker-compose.yml,
        # que o Docker resolve para o IP interno do container do backend.
        proxy_pass         http://backend:8000;
        # Define o cabeçalho 'Host' para o valor do host original da requisição.
        # Isso é importante para que o backend saiba qual host foi acessado.
        proxy_set_header   Host $host;
        # Passa o endereço IP real do cliente para o backend.
        proxy_set_header   X-Real-IP $remote_addr;
        # Adiciona o IP do proxy (Nginx) à lista de IPs que passaram pela requisição.
        # Útil para rastrear o caminho da requisição através de múltiplos proxies.
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        # Passa o protocolo original da requisição (HTTP ou HTTPS) para o backend.
        # Essencial para o backend saber se a requisição original era segura.
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

    # Página de erro padrão para erros 5xx
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}